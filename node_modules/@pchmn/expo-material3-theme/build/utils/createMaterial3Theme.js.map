{"version":3,"file":"createMaterial3Theme.js","sourceRoot":"","sources":["../../src/utils/createMaterial3Theme.ts"],"names":[],"mappings":"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","sourcesContent":["import { argbFromHex, Scheme, themeFromSourceColor } from '@importantimport/material-color-utilities';\nimport color from 'color';\n\nimport { Material3Scheme, Material3Theme, SystemScheme } from '../ExpoMaterial3Theme.types';\n\nconst opacity = {\n  level1: 0.08,\n  level2: 0.12,\n  level3: 0.16,\n  level4: 0.38,\n};\n\nconst elevations = ['transparent', 0.05, 0.08, 0.11, 0.12, 0.14];\n\nexport function createThemeFromSystemSchemes(schemes: { light: SystemScheme; dark: SystemScheme }): Material3Theme {\n  const { light, dark, palettes } = generateSchemesFromSourceColor(schemes.light.primary);\n  schemes = {\n    light: { ...light, ...schemes.light },\n    dark: { ...dark, ...schemes.dark },\n  };\n\n  return {\n    light: { ...schemes.light, ...generateMissingFields(schemes.light, palettes) } as Material3Scheme,\n    dark: { ...schemes.dark, ...generateMissingFields(schemes.dark, palettes) } as Material3Scheme,\n  };\n}\n\nexport function createThemeFromSourceColor(sourceColor: string): Material3Theme {\n  const { light, dark, palettes } = generateSchemesFromSourceColor(sourceColor);\n\n  return {\n    light: { ...light, ...generateMissingFields(light, palettes) } as Material3Scheme,\n    dark: { ...dark, ...generateMissingFields(dark, palettes) } as Material3Scheme,\n  };\n}\n\nfunction generateMissingFields(scheme: SystemScheme, palettes: any) {\n  const elevation = elevations.reduce(\n    (acc, value, index) => ({\n      ...acc,\n      [`level${index}`]: index === 0 ? value : color(scheme.surface).mix(color(scheme.primary), Number(value)).hex(),\n    }),\n    {}\n  ) as Material3Scheme['elevation'];\n\n  const customColors = {\n    surfaceDisabled: color(scheme.onSurface).alpha(opacity.level2).rgb().string(),\n    onSurfaceDisabled: color(scheme.onSurface).alpha(opacity.level4).rgb().string(),\n    backdrop: color(palettes.neutralVariant.tone(20)).alpha(0.4).rgb().string(),\n  };\n\n  return { elevation, ...customColors };\n}\n\nfunction generateSchemesFromSourceColor(sourceColor: string) {\n  const { schemes, palettes } = themeFromSourceColor(argbFromHex(sourceColor));\n\n  return {\n    light: transformScheme(schemes.light),\n    dark: transformScheme(schemes.dark),\n    palettes,\n  };\n}\n\nfunction transformScheme(scheme: Scheme) {\n  const jsonScheme = scheme.toJSON();\n  type SchemeKeys = keyof typeof jsonScheme;\n\n  return Object.entries(jsonScheme).reduce((acc, [key, value]) => {\n    return {\n      ...acc,\n      [key]: color(value).hex(),\n    };\n  }, {} as { [key in SchemeKeys]: string });\n}\n"]}